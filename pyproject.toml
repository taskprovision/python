[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "taskprovision"
version = "0.1.6"
description = "AI-Powered Development Automation Platform"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "TaskProvision Team", email = "info@softreck.dev"}
]
maintainers = [
    {name = "TaskProvision Team", email = "info@softreck.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
keywords = [
    "ai", "automation", "development", "code-generation",
    "quality-assurance", "task-management", "llm", "fastapi",
    "kubernetes", "devops", "productivity", "sales-automation"
]
requires-python = ">=3.8"

[tool.poetry]
name = "taskprovision"
version = "0.1.6"
description = "AI-Powered Development Automation Platform"
authors = ["TaskProvision Team <info@softreck.dev>"]
maintainers = ["TaskProvision Team <info@softreck.dev>"]
license = "Apache-2.0"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Quality Assurance",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
keywords = [
    "ai", "automation", "development", "code-generation",
    "quality-assurance", "task-management", "llm", "fastapi",
    "kubernetes", "devops", "productivity", "sales-automation"
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.4.0"
pydantic-settings = "^2.0.3"
sqlalchemy = "^2.0.0"
alembic = "^1.12.0"
redis = "^5.0.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
httpx = "^0.25.0"
aiohttp = "^3.8.0"
openai = "^1.3.0"
anthropic = "^0.7.0"
ollama = "^0.1.0"
celery = "^5.3.0"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.38.0"}
emails = "^0.6"
jinja2 = "^3.1.0"
python-dotenv = "^1.0.0"
click = "^8.1.0"
typer = "^0.9.0"
rich = "^13.6.0"
PyGithub = "^1.59.0"
stripe = "^7.0.0"
python-magic = "^0.4.27"
Pillow = "^10.0.0"
python-dateutil = "^2.8.2"
pytz = "^2023.3"
marshmallow = "^3.20.0"
jsonschema = "^4.19.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.3.0"
black = "^23.9.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.6.0"
bandit = "^1.7.5"
safety = "^2.3.0"
pre-commit = "^3.5.0"
ipython = "^8.16.0"
ipdb = "^0.13.13"
watchdog = "^3.0.0"
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
mkdocs-awesome-pages-plugin = "^2.9.0"
fakeredis = "^2.20.0"
py-spy = "^0.3.14"
memory-profiler = "^0.61.0"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=taskprovision --cov-report=term-missing"

[tool.coverage.run]
source = ["taskprovision"]
omit = ["**/__init__.py", "**/tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
    "ipython>=8.16.0",
    "ipdb>=0.13.13",
    "watchdog>=3.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-awesome-pages-plugin>=2.9.0",
    "fakeredis>=2.20.0",
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0"
]
